services:
  db:
    image: postgres:17.4
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: prost
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./scripts/db/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
  bff:
    build:
      dockerfile: Bff.Dockerfile
      context: ./backend
    volumes:
      - ./backend:/app
    ports:
      - 8080:8080
    depends_on:
      - db
    env_file:
      - .env
  tg:
    build:
      dockerfile: Tg.Dockerfile
      context: ./backend
    restart: always
    volumes:
      - ./backend:/app
    ports:
      - 8081:8080
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env
      
  notifications-tg:
    build:
      dockerfile: NotificationsTg.Dockerfile
      context: ./backend
    restart: always
    volumes:
      - ./backend:/app
    ports:
      - 8082:8080
    depends_on:
      - db
      - rabbitmq
      - tg
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    env_file:
      - .env
    depends_on:
      - bff

volumes:
  pg-data:
  pgadmin-data:
  rabbitmq-data:
